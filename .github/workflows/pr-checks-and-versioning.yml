name: Publish to npm

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize, closed]

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.head_ref == 'dev' && github.event.action != 'closed'
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: refs/heads/${{ github.head_ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Bump version
        if: github.event.action == 'opened'
        run: |
          # Get the PR title
          PR_TITLE="${{ github.event.pull_request.title }}"

          # Determine version type from PR title (major, minor, or patch)
          VERSION_TYPE="patch"
          if [[ "$PR_TITLE" =~ ^major: ]]; then
            VERSION_TYPE="major"
          elif [[ "$PR_TITLE" =~ ^minor: ]]; then
            VERSION_TYPE="minor"
          elif [[ "$PR_TITLE" =~ ^patch: ]]; then
            VERSION_TYPE="patch"
          fi

          echo "Determined version type: $VERSION_TYPE"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          pnpm version ${VERSION_TYPE}
          git push --follow-tags

      - name: Publish to npm
        run: pnpm publish --access public --no-git-checks --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  undo-bump-on-close:
    runs-on: ubuntu-latest
    # Only run when the PR is closed
    if: github.head_ref == 'dev' && github.event.action == 'closed'
    permissions:
      contents: write # Grant write permissions to push to the head branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Checkout the head branch to revert the commit on it
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Find bump commit and revert
        id: revert_commit
        run: |
          # Find the latest commit by github-actions with a message starting with 'v'
          # This assumes the bump commit message starts with 'v' (e.g., v1.0.0)
          BUMP_COMMIT_HASH=$(git log --author="github-actions" --format="%H" -n 1 --grep="^v")

          if [ -z "$BUMP_COMMIT_HASH" ]; then
            echo "No bump commit found by github-actions starting with 'v'. Nothing to revert."
            echo "::set-output name=reverted::false"
          else
            echo "Found bump commit: $BUMP_COMMIT_HASH"
            # Revert the commit
            git revert -m 1 $BUMP_COMMIT_HASH --no-edit
            echo "::set-output name=reverted::true"
          fi

      - name: Push revert commit
        if: steps.revert_commit.outputs.reverted == 'true'
        run: git push
