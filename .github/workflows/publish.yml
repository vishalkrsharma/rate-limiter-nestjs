name: Publish to npm

on:
  pull_request_target:
    types: [closed]
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.head.ref == 'dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }} # Checkout the base branch (master)

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Dry run publish
        run: pnpm publish --access public --no-git-checks --dry-run

      - name: Bump version based on PR title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          VERSION_TYPE="patch"

          if [[ "$PR_TITLE" =~ ^major: ]]; then
            VERSION_TYPE="major"
          elif [[ "$PR_TITLE" =~ ^minor: ]]; then
            VERSION_TYPE="minor"
          elif [[ "$PR_TITLE" =~ ^patch: ]]; then
            VERSION_TYPE="patch"
          else
            echo "::error::PR title must start with major:, minor:, or patch:"
            exit 1
          fi

          echo "Determined version type: $VERSION_TYPE"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          pnpm version ${VERSION_TYPE}
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "::set-output name=new_version::$NEW_VERSION"
          git push origin master --follow-tags

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          release_name: Release v${{ steps.bump_version.outputs.new_version }}
          body: |-
            Release version v${{ steps.bump_version.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Publish to npm
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
